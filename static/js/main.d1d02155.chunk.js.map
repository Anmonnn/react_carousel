{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","scrollPosition","setScrollPosition","className","style","width","position","transform","transition","map","image","src","alt","type","onClick","newPositoin","length","right","App","state","event","setState","target","value","chooseInput","data","this","htmlFor","id","placeholder","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAkGeA,EAtF2B,SAAC,GAOpC,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,KACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,kBAGA,EAA4CC,mBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAsBA,OACE,sBACEC,UAAU,YACVC,MAAO,CACLC,MAAM,GAAD,OAAKR,EAAYC,EAAjB,MACLQ,SAAU,YAJd,UAOE,qBACEH,UAAU,WACVC,MAAO,CACLC,MAAM,GAAD,OAAKR,EAAYC,EAAjB,OAHT,SAME,oBACEK,UAAU,iBACVC,MAAO,CACLG,UAAU,cAAD,OAAgBN,EAAhB,OACTO,WAAW,aAAD,OAAeT,EAAf,YAJd,SAOGJ,EAAOc,KAAI,SAAAC,GAAK,OACf,6BACE,qBACEC,IAAKD,EACLE,IAAI,QACJR,MAAO,CACLC,MAAM,GAAD,OAAKP,EAAL,kBAQjB,wBACEe,KAAK,SACLC,QAzDqB,WACzB,IAAIC,EAAcd,EAAiBH,EAAYF,EAE3CmB,EAAc,IAChBA,EAAc,GAGhBb,EAAkBa,IAgDhB,oBAMA,wBACEF,KAAK,SACL,UAAQ,OACRC,QAtDsB,WAC1B,IAAIC,EAAcd,EAAiBH,EAAYF,EAE1CmB,EAAcnB,EAAOE,GAAeA,EAAYH,EAAOqB,SAC1DD,EAAcjB,IAAcH,EAAOqB,OAASpB,IAG9CM,EAAkBa,IAgDdX,MAAO,CACLE,SAAU,WACVW,MAAO,KANX,wBCvEAC,E,4MACJC,MAAQ,CACNrB,UAAW,IACXD,UAAW,EACXD,KAAM,EACNG,kBAAmB,IACnBJ,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,EAIJG,UAAY,SAACsB,GACX,EAAKC,SAAS,CAAEvB,WAAYsB,EAAME,OAAOC,S,EAG3C1B,UAAY,SAACuB,GACX,EAAKC,SAAS,CAAExB,WAAYuB,EAAME,OAAOC,S,EAG3C3B,KAAO,SAACwB,GACN,EAAKC,SAAS,CAAEzB,MAAOwB,EAAME,OAAOC,S,EAGtCxB,kBAAoB,SAACqB,GACnB,EAAKC,SAAS,CAAEtB,mBAAoBqB,EAAME,OAAOC,S,EAGnDC,YAAc,SAACC,EAAcL,GAC3B,OAAQK,GACN,IAAK,YACH,OAAO,EAAK3B,UAAUsB,GACxB,IAAK,YACH,OAAO,EAAKvB,UAAUuB,GACxB,IAAK,OACH,OAAO,EAAKxB,KAAKwB,GACnB,QACE,OAAO,EAAKrB,kBAAkBqB,K,4CAIpC,WAAU,IAAD,OACCzB,EAAW+B,KAAKP,MAAhBxB,OAGR,OACE,sBAAKQ,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCR,EAAOqB,OAA1C,aAEA,6BAPc,CAAC,YAAa,YAAa,OAAQ,qBAQpCP,KAAI,SAAAgB,GAAI,OACjB,+BACE,uBAAOE,QAASF,EAAhB,mBACMA,EADN,QAIA,uBACEZ,KAAK,OACLe,GAAIH,EACJI,YAAW,kBAAaJ,GACxBF,MAAO,EAAKJ,MAAMM,GAClBK,SAAU,SAAAV,GAAK,OAAI,EAAKI,YAAYC,EAAML,cAMlD,cAAC,EAAD,CACEzB,OAAQ+B,KAAKP,MAAMxB,OACnBC,KAAM8B,KAAKP,MAAMvB,KACjBC,UAAW6B,KAAKP,MAAMtB,UACtBC,UAAW4B,KAAKP,MAAMrB,UACtBC,kBAAmB2B,KAAKP,MAAMpB,2B,GAjFtBgC,IAAMC,WAyFTd,IClGfe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d1d02155.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype CarouselProps = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  // infinite: boolean;\n};\n\nconst Carousel: React.FC<CarouselProps> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  // infinite,\n}) => {\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  const scrollPositionLeft = () => {\n    let newPositoin = scrollPosition + itemWidth * step;\n\n    if (newPositoin > 0) {\n      newPositoin = 0;\n    }\n\n    setScrollPosition(newPositoin);\n  };\n\n  const scrollPositionRight = () => {\n    let newPositoin = scrollPosition - itemWidth * step;\n\n    if ((newPositoin - step * itemWidth) < -(itemWidth * images.length)) {\n      newPositoin = itemWidth * -(images.length - step);\n    }\n\n    setScrollPosition(newPositoin);\n  };\n\n  return (\n    <div\n      className=\"Container\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        position: 'relative',\n      }}\n    >\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${scrollPosition}px)`,\n            transition: `transform ${animationDuration}ms ease`,\n          }}\n        >\n          {images.map(image => (\n            <li>\n              <img\n                src={image}\n                alt=\"Smile\"\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n      </div>\n      <button\n        type=\"button\"\n        onClick={scrollPositionLeft}\n      >\n        &#8592;\n      </button>\n      <button\n        type=\"button\"\n        data-cy=\"next\"\n        onClick={scrollPositionRight}\n        style={{\n          position: 'absolute',\n          right: '0',\n        }}\n      >\n        &#8594;\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  itemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  frameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  step = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  animationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  chooseInput = (data: string, event: React.ChangeEvent<HTMLInputElement>) => {\n    switch (data) {\n      case 'itemWidth':\n        return this.itemWidth(event);\n      case 'frameSize':\n        return this.frameSize(event);\n      case 'step':\n        return this.step(event);\n      default:\n        return this.animationDuration(event);\n    }\n  };\n\n  render() {\n    const { images } = this.state;\n    const dataInput = ['itemWidth', 'frameSize', 'step', 'animationDuration'];\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <ul>\n          {dataInput.map(data => (\n            <li>\n              <label htmlFor={data}>\n                {`${data}: `}\n              </label>\n\n              <input\n                type=\"text\"\n                id={data}\n                placeholder={`Enter a ${data}`}\n                value={this.state[data as keyof State]}\n                onChange={event => this.chooseInput(data, event)}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <Carousel\n          images={this.state.images}\n          step={this.state.step}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          animationDuration={this.state.animationDuration}\n          // infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}