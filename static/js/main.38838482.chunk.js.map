{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","scrollPosition","setScrollPosition","positionLeft","setPositionLeft","positionRight","setPositionRight","stateButton","className","style","width","position","transform","transition","map","image","src","alt","type","onClick","newPosition","length","disabled","visibility","right","dataInput","App","state","handleChangeItemWidth","event","setState","target","value","handleChangeFrameSize","handleChangeStep","handleChangeAnimationDuration","chooseInput","data","getInfiniteInput","prev","this","htmlFor","id","placeholder","String","onChange","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38838482.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype CarouselProps = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<CarouselProps> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [positionLeft, setPositionLeft] = useState(false);\n  const [positionRight, setPositionRight] = useState(false);\n\n  const stateButton = itemWidth * step >= -55 && itemWidth * frameSize <= 55;\n\n  const scrollPositionLeft = () => {\n    let newPosition = scrollPosition + itemWidth * step;\n\n    if (infinite) {\n      newPosition = itemWidth * -(images.length - step);\n      setPositionRight(true);\n      setScrollPosition(newPosition);\n\n      return;\n    }\n\n    if (newPosition > 0) {\n      newPosition = 0;\n      setPositionLeft(true);\n    } else {\n      setPositionRight(false);\n      setPositionLeft(false);\n    }\n\n    setScrollPosition(newPosition);\n  };\n\n  const scrollPositionRight = () => {\n    let newPosition = scrollPosition - itemWidth * step;\n\n    if (infinite) {\n      newPosition = 0;\n      setPositionLeft(true);\n      setScrollPosition(newPosition);\n\n      return;\n    }\n\n    if ((newPosition - step * itemWidth) < -(itemWidth * images.length)) {\n      newPosition = itemWidth * -(images.length - step);\n      setPositionRight(true);\n    } else {\n      setPositionLeft(false);\n      setPositionRight(false);\n    }\n\n    setScrollPosition(newPosition);\n  };\n\n  return (\n    <div\n      className=\"Container\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        position: 'relative',\n      }}\n    >\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${scrollPosition}px)`,\n            transition: `transform ${animationDuration}ms ease`,\n          }}\n        >\n          {images.map(image => (\n            <li className=\"Carousel__item\" key={image}>\n              <img\n                src={image}\n                alt=\"Smile\"\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n                className=\"Carousel__img\"\n              />\n            </li>\n          ))}\n        </ul>\n\n      </div>\n      <button\n        type=\"button\"\n        onClick={scrollPositionLeft}\n        disabled={positionLeft && !infinite}\n        style={{\n          visibility: stateButton\n            ? 'hidden' : 'visible',\n        }}\n      >\n        &#8592;\n      </button>\n      <button\n        type=\"button\"\n        data-cy=\"next\"\n        onClick={scrollPositionRight}\n        style={{\n          position: 'absolute',\n          right: '0',\n          visibility: stateButton\n            ? 'hidden' : 'visible',\n        }}\n        disabled={positionRight && !infinite}\n      >\n        &#8594;\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  images: string[];\n  infinite: boolean,\n}\n\nconst dataInput = ['itemWidth', 'frameSize', 'step', 'animationDuration'];\n\nclass App extends React.Component<{}, State> {\n  state = {\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  handleChangeItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  handleChangeFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  handleChangeStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  handleChangeAnimationDuration =\n  (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  chooseInput = (data: string, event: React.ChangeEvent<HTMLInputElement>) => {\n    switch (data) {\n      case dataInput[0]:\n        return this.handleChangeItemWidth(event);\n      case dataInput[1]:\n        return this.handleChangeFrameSize(event);\n      case dataInput[2]:\n        return this.handleChangeStep(event);\n      default:\n        return this.handleChangeAnimationDuration(event);\n    }\n  };\n\n  getInfiniteInput = () => {\n    this.setState((prev) => ({ infinite: !(prev.infinite) }));\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <ul>\n          {dataInput.map(data => (\n            <li key={data}>\n              <label htmlFor={data}>\n                {`${data}: `}\n              </label>\n\n              <input\n                type=\"text\"\n                id={data}\n                placeholder={`Enter a ${data}`}\n                value={String(this.state[data as keyof State])}\n                onChange={event => this.chooseInput(data, event)}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={this.state.infinite}\n            onChange={() => this.getInfiniteInput()}\n          />\n          infinite\n        </label>\n\n        <Carousel\n          images={this.state.images}\n          step={this.state.step}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          animationDuration={this.state.animationDuration}\n          infinite={this.state.infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}